# -*- coding: utf-8 -*-
"""churn_eda.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VNeq3pBNhhbt1CW3noTpfDbD1ri0uqGi

#Аналіз Даних (EDA)
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Завантаження датасету
df = pd.read_csv('data/internet_service_churn.csv')

"""#Загальна інформація про датасет"""

df.head(5) # Виведення перших 5 рядків

df.shape

# Виведення назв колонок
df.columns

# Виведення транспонованої таблиці статистичних характеристик датасету
df.describe().transpose()

"""# Аналіз отриманого результату"""

# Виведення негативних значень
df[(df['subscription_age'] < 0)]

"""Оскільки було виявлено лише один запис з негативним показником subscription_age то даний запис можна видалити. Це ніяк не вплине на навчання моделі

Для змінних із великими розмахами (bill_avg, download_avg, upload_avg) може бути корисна стандартизація.

Максимальні показники можуть бути використані у розробці інтерфейсу для обмеження під час введення даних нового клієнта.
"""

# Перевірка на унікальність
df.nunique()

"""# is_tv_subscriber та is_movie_package_subscriber приймаєть лише значення 0 та 1, можуть бути віднесені до категоріальних змінних."""

df['churn'].value_counts()

# Виявлення відсутніх значень
missing_summary = pd.DataFrame({
    'Missing Count': df.isnull().sum(),
    'Missing Percentage': ((df.isnull().sum() / len(df)) * 100).round(2)
})
missing_summary.sort_values(by='Missing Count', ascending=False)

"""# Найбільше відсуніх значень має reamining_contract, це ті клієнти які не мали контракту, тому доцільно буде замінити відсутні значення на нуль. Відсутність одинакової кількості значень в download_avg та upload_avg та їх невеликий % від загальної кількості, а саме 0,53 % говорить про те що ці пропуски можна видалити."""

# Візуалізація розподілу цільової змінної
plt.figure(figsize=(6,4))
sns.countplot(x='churn', data=df, palette='coolwarm')
plt.title('Розподіл відтоку клієнтів')
plt.show()

# Розділяємо бінарні та безперервні змінні
continuous_columns = ['subscription_age', 'bill_avg', 'reamining_contract',
       'service_failure_count', 'download_avg', 'upload_avg',
       'download_over_limit']
binary_columns = ['is_tv_subscriber', 'is_movie_package_subscriber']

# Візуалізація безперервних числових змінних
if continuous_columns:
    plt.figure(figsize=(15, 15))
    df[continuous_columns].hist(bins=30, figsize=(12, 8))
    plt.show()

# Візуалізація бінарних змінних
for col in binary_columns:
    plt.figure(figsize=(6, 4))
    sns.countplot(x=df[col], palette='coolwarm')
    plt.title(f'Розподіл {col}')
    plt.xticks([0, 1], ['No', 'Yes'])
    plt.show()

# Аналіз кореляцій (виключаємо "id")
plt.figure(figsize=(12,8))
sns.heatmap(df.drop(columns=['id']).corr(), annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Кореляційна матриця')
plt.show()

"""Cпостерігається сильна негативна кореляція між reamining_contract та churn (-0.63), це говорить нам про те, що чим довший контракт тим меньша ймовірність відтоку клієнтів. Виглядає логічно.

Між download_avg та upload_avg кореляція позитивна (0.55) що теж логічно, оскільки активні користувачі як передають так і приймають великі обсяги даних. Хоч змінні між собою і корелюють, але можнв залишити обидві, оскільки кореляція не перевищує 0.8

bill_avg корелює з download_avg (0.43) та з  reamining_contract (0.33) що говорить нам про те що чим більший рахунок за останні три місяці отримує клієнт тим активніше він користується інтернетом абож без підписки або користується довгостроковими контрактами, оскільки також спостерігається негативна кореляція між  bill_avg та download_over_limit (-0.23)

is_tv_subscriber та churnб is_movie_package_subscriber та download_avg мають приблизно обнакову невисоку негативну кореляцію з churn. Це говорить про те що додаткові послуги та активне користування інтернетом привязують клієнтів та запобігають їх відтоку.
"""